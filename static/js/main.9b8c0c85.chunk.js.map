{"version":3,"sources":["Navigation.js","MoviesDirectory.js","Form.js","AddMovie.js","EditMovie.js","IndividualMovie.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","style","marginRight","marginLeft","to","className","size","color","React","Component","url","MovieDirectory","props","state","items","redirect","inputValue","source","undefined","messageList","createRef","onDelete","bind","onGetData","scrollToBottom","onChange","this","CancelToken","axios","get","cancelToken","token","then","res","console","log","movies","data","setState","id","delete","scrollHeight","current","scrollTop","e","preventDefault","target","value","catch","thrown","isCancel","message","cancel","renderTable","wholeData","localDataMovies","map","movieData","push","movie","editUrl","eachUrl","printingData","key","title","director","rating","inactiveColor","activeColor","onClick","toLowerCase","includes","Helmet","type","placeholder","ref","Form","onSubmit","onChangeTitle","onChangeDesc","onChangeDir","onChangeRating","ratingValue","inputTitleColor","inputDirectorColor","inputDescColor","length","description","AddMovie","error","status","newInput","post","response","warning","EditMovie","error404","errorNum","idPage","match","params","put","history","goBack","printData","IndividualMovie","renderPage","App","basename","exact","path","component","Home","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9b8c0c85.chunk.js","sourcesContent":["import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport { MdAddCircle } from \"react-icons/md\";\nimport { MdHome } from \"react-icons/md\";\n\nclass Navigation extends React.Component{\n    render(){\n        return <nav>\n                    <Link style={{marginRight: \"15px\", marginLeft: \"15px\"}} to=\"/\"><MdHome className=\"nav-icon\" size=\"20px\" color=\"white\" /> Home</Link>\n                    <Link style={{marginRight: \"0px\", marginLeft: \"15px\"}} to=\"/addmovie\"><MdAddCircle className=\"nav-icon\" size=\"20px\" color=\"white\" /> Add Movie</Link>\n                </nav>\n                \n    }\n}\n\nexport default Navigation;","import React from 'react';\nimport {Helmet} from \"react-helmet\";\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport Navigation from './Navigation';\nimport { MdClear } from \"react-icons/md\";\nimport { MdEdit } from \"react-icons/md\";\nimport { MdSearch } from \"react-icons/md\";\nimport BeautyStars from 'beauty-stars';\n\n\nlet url = \"http://3.120.96.16:3001/movies/\";\n\nclass MovieDirectory extends React.Component{\n      constructor(props) {\n        super(props);\n        this.state = {\n          items: [],\n          redirect: false,\n          inputValue: \"\",\n        };\n      \n        this.source = undefined;\n        this.messageList = React.createRef();\n        this.onDelete = this.onDelete.bind(this);\n        this.onGetData = this.onGetData.bind(this);\n        this.scrollToBottom = this.scrollToBottom.bind(this);\n        this.onChange = this.onChange.bind(this);\n      }\n\n      componentDidMount() {\n        this.onGetData();\n      }\n\n      onGetData(){\n         let CancelToken = axios.CancelToken;\n         this.source = CancelToken.source();\n\n          axios.get(url, {\n            cancelToken: this.source.token\n          })\n          .then(res => {\n            console.log(res)\n          const movies = res.data;\n          console.log(movies)\n            this.setState({items: movies})\n          })\n      }\n\n      componentDidUpdate(){\n          this.scrollToBottom();   \n      }\n\n\n      onDelete(id){\n          axios.delete(url+id)\n          .then(() => {\n            this.onGetData();\n          })\n              \n      }\n\n      scrollToBottom(){\n        const scrollHeight = this.messageList.current.scrollHeight;\n        this.messageList.current.scrollTop = scrollHeight;\n      }\n\n      onChange(e){\n        e.preventDefault();\n        this.setState({inputValue : e.target.value})\n      }\n\n      componentWillUnmount(){\n\n        axios.get(url, {\n          cancelToken: this.source.token\n        })\n        .catch(function (thrown) {\n          if (axios.isCancel(thrown)) {\n            console.log('Request canceled', thrown.message);\n          } else {\n            // handle error\n          }\n        }); \n        this.source.cancel('Operation canceled by the user.'); \n\n      } \n\n      render(){\n          //console.log(\"inside the render\");\n          let movies = this.state.items;\n          console.log(movies);\n\n          let localDataMovies = [];\n\n          movies.map( movieData => {\n               return localDataMovies.push(movieData);\n          }); \n\n          console.log(localDataMovies);\n          let renderTable;\n          let wholeData;\n          console.log(\"input value\", this.state.inputValue);\n\n          renderTable = localDataMovies.map(movie => {\n            let editUrl = \"/editmovie/\" + movie.id;\n            let eachUrl = \"/movies/\" + movie.id;\n\n            let printingData = (<tr key= {movie.id}>\n                                    <td><Link style={{marginRight: \"10px\"}} to={eachUrl}>{movie.title}</Link></td>\n                                    <td>{movie.director}</td>\n                                    <td><BeautyStars value={movie.rating} size=\"15px\" inactiveColor=\"#d1d1d1\" activeColor=\"orange\"/></td>\n                                    <td>\n                                        <button className=\"options-button\" onClick = {() => this.onDelete(movie.id)}><MdClear className=\"options-icon\" size=\"25px\" color=\"red\" /></button>\n                                        <button className=\"options-button\" ><Link style={{marginRight: \"10px\"}} to={editUrl}><MdEdit className=\"options-icon two\" size=\"20px\" color=\"green\" /></Link></button>\n                                    </td>\n                                </tr>\n                                )\n          \n            if ( this.state.inputValue !== \"\"){ // if search input not empty\n              //console.log(\"there is an filtered input\")\n            \n                if ( movie.title.toLowerCase().includes(this.state.inputValue)){ // search input for title is found\n                      //console.log(\"there is a match\")\n                      wholeData = printingData;\n                      } else if (movie.director.toLowerCase().includes(this.state.inputValue)){  // search input for director is found\n                          wholeData = printingData;\n                      } else { // for the items that is not found\n                          return null;\n                      }\n            } else {  // if search input is empty - print the whole list\n               //console.log(\"its empty!!\")\n                wholeData = printingData;\n            }\n          \n          return wholeData;\n      })\n\n          return <div id=\"movie-directory\">\n                      <Helmet>\n                          <title>Home - Movies Directory</title>\n                      </Helmet>\n                      <header>\n                         <Navigation/>    \n                          <h1>Movies Directory</h1>\n                          <h3>Share your favorite movies with everyone</h3>     \n                      </header>\n                      <div className=\"search-box\">\n                        <form className=\"search\" onChange = {this.onChange}>\n                            <input type=\"text\" placeholder=\"search movie by title or director's name\"/>\n                            <span className =\"search-icon\"><MdSearch size=\"25px\" color= \"#c9c9c9\"/></span>\n                        </form>\n                      </div>\n                      <div className=\"movie-list\" ref={this.messageList}>\n                          <table>\n                              <thead>\n                                  <tr>\n                                      <th>Title</th>\n                                      <th>Director</th>\n                                      <th>Rating</th>\n                                      <th></th>\n                                  </tr>\n                              </thead>\n                              <tbody>\n                                  {renderTable}\n                              </tbody>\n                          </table>\n                      </div>\n                </div>\n     \n  }\n\n}\n\nexport default MovieDirectory ","import React from 'react';\nimport './Form.css';\nimport BeautyStars from 'beauty-stars';\n\nclass Form extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            redirect: false,\n            value: 0,\n        }\n\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeDesc = this.onChangeDesc.bind(this);\n        this.onChangeDir = this.onChangeDir.bind(this);\n        this.onChangeRating = this.onChangeRating.bind(this);\n      }\n\n    onChangeTitle(e){\n        this.props.onChangeTitle(e.target.value);\n    } \n\n    onChangeDesc(e){\n        this.props.onChangeDesc(e.target.value);\n    } \n\n    onChangeDir(e){\n        this.props.onChangeDir(e.target.value);\n    } \n\n    onChangeRating(e){\n        this.setState({value: e})\n        console.log(e)\n        this.props.onChangeRating(e);\n        \n    } \n      \n   onSubmit(e){\n    e.preventDefault();\n    this.props.onSubmit(true)\n\n}\n    \n\n    render(){\n\n        let ratingValue;\n        if (this.props.rating !== undefined){\n            ratingValue = this.props.rating;\n        } else {\n            ratingValue = this.state.value;\n        }\n\n        let inputTitleColor;\n        //console.log(\"props counter\", this.props.rating)\n\n        let inputDirectorColor;\n        let inputDescColor;\n\n        \n            if (this.props.title.length >= 1 && this.props.title.length <= 40){\n                inputTitleColor = {color : \"#737373\"};\n            } else {\n                inputTitleColor = {color : \"red\"};\n            }\n    \n            if (this.props.director.length >= 1 && this.props.director.length <= 40){\n                inputDirectorColor = {color : \"#737373\"};\n            } else {\n                inputDirectorColor = {color : \"red\"};\n            }\n    \n            if (this.props.description.length >= 1 && this.props.description.length <= 300){\n                inputDescColor = {color : \"#737373\"};\n            } else {\n                inputDescColor = {color : \"red\"};\n            }\n    \n\n        return (<div className = \"form-box\">\n                     <form onSubmit={this.onSubmit}>\n                        <label>Title:</label>\n                        <input className=\"input-box\" style={inputTitleColor} type=\"text\" value={this.props.title} title={this.props.value} onChange={this.onChangeTitle}/>\n                        <span className=\"inputValue\" style={inputTitleColor}> {this.props.title.length}/40 characters</span>\n                        <label>Director:</label>\n                        <input className=\"input-box\" style={inputDirectorColor} type=\"text\" value={this.props.director} director={this.props.value} onChange={this.onChangeDir}/>\n                        <span className=\"inputValue\" style={inputDirectorColor}> {this.props.director.length}/40 characters</span>\n                        <label>Description:</label>\n                        <textarea className=\"input-box desc\" style={inputDescColor} type=\"text\" value={this.props.description} description={this.props.value} onChange={this.onChangeDesc}/>\n                        <span className=\"inputValue\" style={inputDescColor}> {this.props.description.length}/300 characters</span>\n                        <label>Rating</label>\n                        <span className=\"rating-choice\">\n                            <BeautyStars \n                                size=\"20px\" \n                                rating={this.props.rating} \n                                onChange={this.onChangeRating} \n                                value={ratingValue} \n                                inactiveColor=\"#d1d1d1\" \n                                activeColor=\"orange\"\n                            />\n                        </span>\n                        <button className=\"submit-button\">Submit</button>\n                     </form>\n                </div>)\n    }\n}\n\nexport default Form;\n","import React from 'react';\nimport {Helmet} from \"react-helmet\";\nimport axios from 'axios';\nimport {Redirect} from 'react-router-dom';\nimport Navigation from './Navigation';\nimport Form from './Form';\n\nlet url = \"http://3.120.96.16:3001/movies/\";\n\n\nclass AddMovie extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          title : \"\",\n          description : \"\",\n          director: \"\",\n          rating: 0,\n          redirect: false,\n          error: false,\n        };\n        \n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeDesc = this.onChangeDesc.bind(this);\n        this.onChangeDir = this.onChangeDir.bind(this);\n        this.onChangeRating = this.onChangeRating.bind(this);\n      }\n\n\n      onChangeTitle(value){\n          this.setState({title: value});\n      } \n\n      onChangeDesc(value){\n          this.setState({description: value});\n      } \n\n      onChangeDir(value){\n          this.setState({director: value});\n      } \n\n      onChangeRating(value){\n          this.setState({rating: value});\n      } \n      \n    onSubmit(status){\n\n        let newInput = {\n          title: this.state.title,\n          description: this.state.description,\n          director: this.state.director,\n          rating: this.state.rating,\n        }\n        axios.post(url, newInput)\n        .then(function (response) {\n          console.log(response); \n        })\n        .then( () => {\n          this.setState({redirect: status})\n          this.setState({error: false})\n        })\n        .catch((error) =>{\n          console.log(error);\n          this.setState({error: true})\n        });\n       \n    }\n\n\n    render(){\n     \n       let warning;\n\n        if (this.state.redirect){\n            return <Redirect to=\"/\" />;\n        }\n\n        if (this.state.error){\n          warning = (<div className = \"warning\">\n                        <p>Error! Changes can not be saved.</p>\n                        <p>Please check and make sure all inputs are correct!</p>\n                  </div>)\n        } else {\n          warning = null;\n        }\n\n        return <div id=\"movie-directory\">\n                    <Helmet>\n                        <title>Add Movie</title>\n                    </Helmet>\n                    <header>\n                           <Navigation/>    \n                          <h1>Add Movies</h1>\n                          <h3>Share your favorite movies with everyone</h3>    \n                      </header>\n                      {warning}\n                      <Form\n                          onSubmit = {this.onSubmit} \n                          description = {this.state.description} onChangeDesc = {this.onChangeDesc} \n                          director = {this.state.director} onChangeDir = {this.onChangeDir} \n                          rating = {this.state.rating} onChangeRating = {this.onChangeRating} \n                          title = {this.state.title} onChangeTitle = {this.onChangeTitle}\n                         \n                      />\n                  \n                </div>\n    }\n\n}\n\nexport default AddMovie;","import React from 'react';\nimport {Helmet} from \"react-helmet\";\nimport './EditMovie.css'\nimport axios from 'axios';\nimport Navigation from './Navigation';\nimport Form from './Form'\nimport {Link} from 'react-router-dom';\nimport { MdChevronLeft } from \"react-icons/md\";\n\n\nlet url = \"http://3.120.96.16:3001/movies/\";\n\nclass EditMovie extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n          title : \"\",\n          description : \"\",\n          director: \"\",\n          rating: 0,\n          items: {},\n          status: false,\n          error: false,\n          error404: false,\n          redirect: false,\n          errorNum: 0,\n        };\n\n        this.source = undefined;\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeDesc = this.onChangeDesc.bind(this);\n        this.onChangeDir = this.onChangeDir.bind(this);\n        this.onChangeRating = this.onChangeRating.bind(this);\n        this.onGetData = this.onGetData.bind(this);\n    \n      }\n\n      componentDidMount() {\n        let idPage = this.props.match.params.id;\n      \n        this.onGetData(idPage);\n\n    }\n\n      onGetData(idPage){\n\n        let CancelToken = axios.CancelToken;\n        this.source = CancelToken.source();\n\n        axios.get(url+ idPage, {\n            cancelToken: this.source.token\n          })\n        .then(res => {\n          console.log(res)\n        const movies = res.data;\n        //console.log(movies)\n          this.setState({title: movies.title,\n                        description: movies.description,\n                        rating: movies.rating,\n                        director: movies.director,\n          })\n        }).catch((error) => {\n          console.log(error);\n          this.setState({error404: true});\n        });\n      }\n      \n      onChangeTitle(value){\n        this.setState({title: value});\n    } \n\n      onChangeDesc(value){\n          this.setState({description: value});\n      } \n\n      onChangeDir(value){\n          this.setState({director: value});\n      } \n\n      onChangeRating(value){\n          this.setState({rating: value});\n      } \n      \n      onSubmit(status){\n        \n          let idPage = this.props.match.params.id;\n          let newInput = {\n            title: this.state.title,\n            description: this.state.description,\n            director: this.state.director,\n            rating: this.state.rating,\n          }\n          axios.put(url+idPage, newInput)\n          .then(function (response) {\n            console.log(response);\n          })\n          .then( () => {\n            this.setState({status: status})\n            this.setState({error: false})\n            this.props.history.goBack();\n          /*   let idPage = this.props.match.params.id;\n            this.onGetData(idPage) */\n            //this.setState({redirect: status})\n          })\n          .catch((error) => {\n            console.log(error.response.status);\n            this.setState({error: true, errorNum: error.response.status})\n          });\n          \n      }\n\n     componentWillUnmount(){\n\n      axios.get(url, {\n        cancelToken: this.source.token\n      })\n      .catch(function (thrown) {\n        if (axios.isCancel(thrown)) {\n          console.log('Request canceled', thrown.message);\n        } else {\n          // handle error\n        }\n      }); \n      this.source.cancel('Operation canceled by the user.'); \n\n    } \n\n    render(){\n\n        let warning;\n        let printData;\n        if (!this.state.status && !this.state.error404 && !this.state.error){\n            printData = (<Form\n                            onSubmit = {this.onSubmit} \n                            description = {this.state.description} onChangeDesc = {this.onChangeDesc} \n                            director = {this.state.director} onChangeDir = {this.onChangeDir} \n                            rating = {this.state.rating} onChangeRating = {this.onChangeRating} \n                            title = {this.state.title} onChangeTitle = {this.onChangeTitle}\n                          />\n                        )\n        } \n        \n        if (this.state.error404){\n           printData = (<div className=\"content\">\n                              <h2>ERROR 404</h2>\n                              <h2>Oops! The movie that you are looking for is not here!</h2>\n                              <p>Maybe the link is not complete or the page has been removed.</p>\n                              <p className=\"back-button\"><Link style={{marginRight: \"15px\", marginLeft: \"0px\", color: \"rgb(10, 151, 161)\"}} to=\"/\"><MdChevronLeft className=\"nav-icon\" size=\"20px\" color=\"rgb(10, 151, 161)\"/> Back to movies directory</Link></p>\n                          </div>\n                        )\n        } \n        \n    /*    if(this.state.status && !this.state.error404) {\n           printData = (<div className = \"confirmation\">\n                            <h2>Changes has been saved!</h2>\n                            <h4 className =\"confirmation-title\">{this.state.title}</h4>\n                            <h5>Rating: <span><BeautyStars value={this.state.rating} size=\"15px\" inactiveColor=\"#d1d1d1\" activeColor=\"orange\"/></span></h5>\n                            <h5>Director: {this.state.director}</h5>\n                            <p>{this.state.description}</p>\n                            <p className=\"back-button\" style={{marginTop: \"10px\", color: \"#737373\"}}><Link style={{marginRight: \"15px\", marginLeft: \"0px\", color: \"rgb(10, 151, 161)\"}} to=\"/\"><MdChevronLeft className=\"nav-icon\" size=\"20px\" color=\"rgb(10, 151, 161)\"/> Back to movies directory</Link></p>\n                         </div>\n                        ) \n           \n        } */\n      \n\n        if (this.state.error){\n            if(this.state.errorNum === 400){\n              warning = (<div className = \"warning\">\n                              <p>Error! Changes can not be saved.</p>\n                              <p>Please check and make sure all inputs are correct!</p>\n                        </div>)\n            } else if ( this.state.errorNum === 404 ){\n              warning = (<div className = \"warning\">\n                             <p>Error! Changes can not be saved.</p>\n                             <p>It seems the page has been removed.</p>\n                         </div>)\n            }\n        \n          printData = (<Form\n                          onSubmit = {this.onSubmit} \n                          description = {this.state.description} onChangeDesc = {this.onChangeDesc} \n                          director = {this.state.director} onChangeDir = {this.onChangeDir} \n                          rating = {this.state.rating} onChangeRating = {this.onChangeRating} \n                          title = {this.state.title} onChangeTitle = {this.onChangeTitle}\n        />\n      )\n        } else {\n          warning = null;\n        }\n\n        return <div id=\"movie-directory\">\n                    <Helmet>\n                        <title>Edit Movie</title>\n                    </Helmet>\n                    <header>\n                         <Navigation/>    \n                          <h1>Edit Movie</h1>\n                    </header>\n                    {warning}\n                    {printData}\n                </div>\n    }\n\n}\n\nexport default EditMovie;","import React from 'react';\nimport {Helmet} from \"react-helmet\";\nimport axios from 'axios';\nimport Navigation from './Navigation';\nimport BeautyStars from 'beauty-stars';\nimport './IndivMovie.css';\nimport {Link} from 'react-router-dom';\nimport { MdChevronLeft } from \"react-icons/md\";\nimport {Redirect} from 'react-router-dom';\n\nlet url = \"http://3.120.96.16:3001/movies/\";\nclass IndividualMovie extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          items: {},\n          error: false,\n          redirect: false\n        };\n    \n      }\n\n    componentDidMount() {\n        \n      let idPage = this.props.match.params.id;\n\n        axios.get(url+ idPage)\n        .then(res => {\n          console.log(res)\n         const movies = res.data;\n         //console.log(movies)\n          this.setState({items: movies})\n        }).catch((error) => {\n          console.log(error);\n          this.setState({error: true})\n        });\n\n    }\n\n    onDelete(id){\n      axios.delete(url+id)\n      .then(() => {\n        this.setState({redirect: true})\n      })\n          \n  }\n\n    render(){\n\n\n        console.log(this.state.items);\n        let movie = this.state.items;\n        let renderPage;\n        let idPage = this.props.match.params.id;\n        let editUrl = \"/editmovie/\" + idPage;\n\n        if (this.state.redirect){\n          return <Redirect to=\"/\" />;\n      }\n\n\n        if (!this.state.error){\n            renderPage = (<div className=\"content\">\n                              <h2>{movie.title}</h2>\n                              <h5 className=\"content-dir\">Ratings: <span><BeautyStars value={movie.rating} size=\"15px\" inactiveColor=\"#d1d1d1\" activeColor=\"orange\"/></span></h5>\n                              <h3 className=\"content-dir\">Director: {movie.director}</h3>\n                              <p>{movie.description}</p>\n                              <div className=\"buttons\">\n                                 <button className=\"buttons-info delete\" onClick = {() => this.onDelete(movie.id)}>Delete</button>\n                                 <button className=\"buttons-info edit\" ><Link style={{marginRight: \"10px\"}} to={editUrl}>Edit</Link></button>\n                              </div>\n                              <p className=\"back-button\"><Link style={{marginRight: \"15px\", marginLeft: \"0px\", color: \"rgb(10, 151, 161)\"}} to=\"/\"><MdChevronLeft className=\"nav-icon\" size=\"20px\" color=\"rgb(10, 151, 161)\"/> Back to movies directory</Link></p>\n                          </div>\n                         )\n        }else {\n           renderPage = (<div className=\"content\">\n                              <h2>ERROR 404</h2>\n                              <h2>Oops! The movie that you are looking for is not here!</h2>\n                              <p>Maybe the link is not complete or the page has been removed.</p>\n                              <p className=\"back-button\"><Link style={{marginRight: \"15px\", marginLeft: \"0px\", color: \"rgb(10, 151, 161)\"}} to=\"/\"><MdChevronLeft className=\"nav-icon\" size=\"20px\" color=\"rgb(10, 151, 161)\"/> Back to movies directory</Link></p>\n                          </div>\n                        )\n        }\n\n        return <div id=\"movie-directory\">\n                    <Helmet>\n                        <title>{movie.title}</title>\n                    </Helmet>\n                    <header>\n                        <Navigation/>  \n                         <h1>Movie Info</h1>     \n                    </header>\n                    {renderPage}\n                </div>\n    }\n\n}\n\nexport default IndividualMovie;","import React from 'react';\nimport './App.css';\nimport { Route, BrowserRouter as Router, HashRouter} from 'react-router-dom';\nimport Home from './MoviesDirectory';\nimport AddMovie from './AddMovie';\nimport EditMovie from './EditMovie';\nimport IndividualMovie from './IndividualMovie';\n\nclass App extends React.Component {\n  render(){\n    return (\n      <div id=\"App\">\n          <HashRouter basename=\"/\">\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/addmovie\" component={AddMovie} />\n              <Route path=\"/editmovie/:id\" component={EditMovie} />\n              <Route path=\"/movies/:id\" component={IndividualMovie} />\n           </HashRouter>\n        \n      </div>\n    );\n  }\n \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}